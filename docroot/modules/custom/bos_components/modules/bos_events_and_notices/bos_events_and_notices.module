<?php

/**
 * @file
 * The Base module file for bos_events_and_notices module.
 */

use Drupal\node\Entity\Node;

/**
 * Implements hook_theme().
 */
function bos_events_and_notices_theme() {
  $theme['paragraph__events_and_notices'] = [
    'base hook' => 'paragraph',
    'path' => drupal_get_path('module', 'bos_events_and_notices') . '/templates',
  ];
  $theme['node__event__featured_item'] = [
    'base hook' => 'node',
    'path' => drupal_get_path('module', 'bos_events_and_notices') . '/templates',
  ];
  $theme['views_view_unformatted__events_and_notices'] = [
    'base hook' => 'view',
    'path' => drupal_get_path('module', 'bos_events_and_notices') . '/templates',
  ];
  $theme['views_view_fields__events_and_notices'] = [
    'base hook' => 'view',
    'path' => drupal_get_path('module', 'bos_events_and_notices') . '/templates',
  ];
  $theme['viewfield__paragraph__events_and_notices'] = [
    'base hook' => 'viewfield',
    'path' => drupal_get_path('module', 'bos_events_and_notices') . '/templates',
  ];
  return $theme;
}

/**
 * Implements hook_preprocess_HOOK__bundle().
 */
function bos_events_and_notices_preprocess_paragraph__events_and_notices(&$variables) {
  $variables["classes"] = "entity entity-paragraphs-item paragraphs-item-events-and-notices component-section fullwidth";
}

/**
 * Implements hook_preprocess_views_view_fields().
 */
function bos_events_and_notices_preprocess_views_view_fields(&$variables) {
  if ($variables["view"]->storage->id() == 'events_and_notices') {
    if ($node = Node::load($variables["row"]->nid)) {
      $type = $node->getType();
      $variables['type_class'] = 'news-item-' . $type;
    }
  }
}
