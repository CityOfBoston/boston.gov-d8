<?php

/**
 * @file
 * The Base module file for bos_events_and_notices module.
 */

use Drupal\views\ViewExecutable;
use Drupal\views\Plugin\views\query\Sql;

/**
 * Implements hook_theme().
 */
function bos_events_and_notices_theme() {
  $theme['paragraph__events_and_notices'] = [
    'base hook' => 'paragraph',
  ];
  $theme['field__paragraph__field_link__events_and_notices'] = [
    'base hook' => 'field',
  ];
  $theme['views_view_unformatted__events_and_notices'] = [
    'base hook' => 'view',
  ];
  $theme['views_view_fields__events_and_notices'] = [
    'base hook' => 'view',
  ];
  $theme['viewfield__paragraph__events_and_notices'] = [
    'base hook' => 'viewfield',
  ];
  return $theme;
}

/**
 * Implements hook_preprocess_HOOK__bundle().
 */
function bos_events_and_notices_preprocess_paragraph__events_and_notices(&$variables) {
  $variables["classes"] = "entity entity-paragraphs-item paragraphs-item-events-and-notices component-section fullwidth";
}

/**
 * Implements hook_preprocess_views_view_fields().
 */
function bos_events_and_notices_preprocess_views_view_fields__events_and_notices(&$variables) {
  if ($node = $variables["row"]->_entity) {
    $type = $node->getType();
    $variables['type_class'] = 'news-item-' . $type;
    $variables["thumbnail"] = ($node->hasField("field_thumbnail") && $node->get("field_thumbnail")->target_id);
  }
}

/**
 * Implements hook_views_pre_build().
 */
function bos_events_and_notices_views_pre_build(ViewExecutable $view) {
  if ($view->id() == "news_and_announcements") {
    $view->setShowAdminLinks(FALSE);
  }
}

/**
 * Implements hook_views_query_alter().
 */
function bos_events_and_notices_views_query_alter(ViewExecutable $view, Sql $query) {
  if ($view->id() == 'events_and_notices' && ($view->getDisplay()->display['id'] == 'upcoming' || $view->getDisplay()->display['id'] == 'related')) {
    $sql = "CASE WHEN node__field_public_notice_date.field_public_notice_date_value IS NULL THEN node__field_event_date_recur.field_event_date_recur_value ELSE node__field_public_notice_date.field_public_notice_date_value END";
    $query->addOrderBy(NULL, $sql, 'ASC', 'pub_or_event_date');
  }
}
