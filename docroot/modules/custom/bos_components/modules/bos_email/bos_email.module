<?php

/**
 * @file
 * The Base module file for bos_email module.
 */

/**
 * Implements hook_theme().
 */
//function bos_email_theme() {
//
//}
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_preprocess_HOOK().
 */
function bos_email_preprocess_page(&$variables) {

}

/**
 * Implements hook_form_alter().
 */
function bos_email_form_bos_core_admin_settings_alter(&$form, FormStateInterface $form_state, $form_id) {

  if (!empty($form_state->getUserInput())) {
    if ($input = $form_state->getUserInput()["bos_email"]) {
        \Drupal::configFactory()->getEditable('bos_email.settings')
          ->set("enabled", $input["enabled"])
          ->set("q_enabled", $input["q_enabled"])
          ->set("contactform.enabled", $input["contactform"]["enabled"] ?? 0)
          ->set("contactform.q_enabled", $input["contactform"]["q_enabled"] ?? 0)
          ->set("registry.enabled", $input["registry"]["enabled"] ?? 0)
          ->set("registry.q_enabled", $input["registry"]["q_enabled"] ?? 0)
          ->set("commissions.enabled", $input["commissions"]["enabled"] ?? 0)
          ->set("commissions.q_enabled", $input["commissions"]["q_enabled"] ?? 0)
          ->set("metrolist.enabled", $input["metrolist"]["enabled"] ?? 0)
          ->set("metrolist.q_enabled", $input["metrolist"]["q_enabled"] ?? 0)
          ->set("alerts.recipient", $input["alerts"]["recipient"] ?? "")
          ->set("alerts.suppressed", $input["alerts"]["conditions"]["suppressed"] ?? 0)
          ->set("alerts.token", $input["alerts"]["conditions"]["token"] ?? 0)
          ->set("alerts.honeypot", $input["alerts"]["conditions"]["honeypot"] ?? 0)
          ->save();
      }
    }

  else {
    $config = \Drupal::configFactory()->get("bos_email.settings");
    $form["bos_email"] = [
      '#type' => 'fieldset',
      '#title' => 'PostMark Emailer',
      '#markup' => 'Fine-grain management for emails sent via PostMark.',
      '#open' => TRUE,

      "enabled" => [
        '#type' => 'checkbox',
        '#title' => t('Postmark Email Service Enabled (Enables/disables ALL emails via PostMark'),
        '#default_value' => $config->get('enabled'),
      ],
      "q_enabled" => [
        '#type' => 'checkbox',
        '#title' => t('Postmark Queue Enabled (ALL emails which PostMark cannot send will be queued'),
        '#default_value' => $config->get('q_enabled'),
      ],

      "contactform" => [
        '#type' => 'fieldset',
        '#title' => 'Contact Form',
        '#markup' => 'Emails from the main Contact Form - when clicking on email addresses on boston.gov.',
        '#collapsible' => FALSE,

        "enabled" => [
          '#type' => 'checkbox',
          '#title' => t('Contact Form email service enabled'),
          '#default_value' => $config->get('contactform.enabled'),
        ],
        "q_enabled" => [
          '#type' => 'checkbox',
          '#title' => t('Contact Form queue enabled'),
          '#default_value' => $config->get('contactform.q_enabled'),
        ],
      ],

      "registry" => [
        '#type' => 'fieldset',
        '#title' => 'Registry Suite',
        '#markup' => 'Emails from the Registry App - confirmations.',
        '#collapsible' => FALSE,

        "enabled" => [
          '#type' => 'checkbox',
          '#title' => t('Registry email service enabled'),
          '#default_value' => $config->get('registry.enabled'),
        ],
        "q_enabled" => [
          '#type' => 'checkbox',
          '#title' => t('Contact Form queue enabled'),
          '#default_value' => $config->get('registry.q_enabled'),
        ],
      ],

      "commissions" => [
        '#type' => 'fieldset',
        '#title' => 'Commissions App',
        '#markup' => 'Emails from the Commissions App.',
        '#collapsible' => FALSE,

        "enabled" => [
          '#type' => 'checkbox',
          '#title' => t('Commission email service enabled'),
          '#default_value' => $config->get('commissions.enabled'),
        ],
        "q_enabled" => [
          '#type' => 'checkbox',
          '#title' => t('Commissions queue enabled'),
          '#default_value' => $config->get('commissions.q_enabled'),
        ],
      ],

      "metrolist" => [
        '#type' => 'fieldset',
        '#title' => 'Metrolist Listing Form',
        '#markup' => 'Emails sent from Metrolist Listing Form processes.',
        '#collapsible' => FALSE,

        "enabled" => [
          '#type' => 'checkbox',
          '#title' => t('metrolist email service Enabled'),
          '#default_value' => $config->get('metrolist.enabled'),
        ],
        "q_enabled" => [
          '#type' => 'checkbox',
          '#title' => t('metrolist queue enabled'),
          '#default_value' => $config->get('metrolist.q_enabled'),
        ],
      ],

    ];
  }
}

