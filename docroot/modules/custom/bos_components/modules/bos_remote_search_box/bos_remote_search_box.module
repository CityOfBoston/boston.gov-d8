<?php

use Drupal\Core\Render\Markup;

/**
 * Implements hook_theme().
 */
function bos_remote_search_box_theme($existing, $type, $theme, $path) {
  $theme = [
    'paragraph__remote_search_box' => [
      'base hook' => 'paragraph',
    ],
    'form__rsb__form' => [
      'base hook' => 'form',
    ],
    'form_element__rsb__searchbox' => [
      'base hook' => 'form_element',
    ],
    'form_element__rsb__neighborhood' => [
      'base hook' => 'form_element',
    ],
    'checkboxes__rsb__checkboxes' => [
      'base hook' => 'checkboxes',
    ],
    'select__rsb__select' => [
      'base hook' => 'select',
    ],
    'input__remote_search_box__checkbox' => [
      'base hook' => 'input__checkbox',
    ],
    'rsb_search_element' => [
      'base hook' => 'container',
    ],
    'container__rsb__results' => [
      'base_hook' => 'container',
      'variables' => ['dataset']
    ],
    'container__street_sweeping_lookup__results' => [
      'base_hook' => 'container',
      'variables' => ['dataset']
    ],
    'container__rsb__errors' => [
      'base_hook' => 'container',
    ],
  ];
  return $theme;
}

/**
 * Implements hook_preprocess_HOOK().
 */
function bos_remote_search_box_preprocess_paragraph__remote_search_box(&$variables) {
  $variables['#attached']['library'][] = 'bos_remote_search_box/patterns.overrides';
  $variables['#attached']['library'][] = 'bos_remote_search_box/patterns.extensions';
  $remote_search_box = $variables["content"]["field_remote_search_control"]["#items"]->value;
  $variables["content"]["form"] = \Drupal::formBuilder()->getForm('Drupal\bos_remote_search_box\Form\\' . $remote_search_box);
}

/**
 * Implements hook_paragraph_hook_summary_alter().
 */
function bos_remote_search_box_paragraph_remote_search_box_summary_alter(array $form_widget, array $para, array $attributes) {
  // Add attributes to the summary area.
  // Set the summary content.
  $markup[] = Markup::create("Remote Search Control");
  if ($para["entity"]->hasField("field_remote_search_control")) {
    $remote_search_box = $para["entity"]->get("field_remote_search_control")->value;
    $markup[] = Markup::create($para["entity"]->getFieldDefinition("field_remote_search_control")->getSetting("allowed_values")[$remote_search_box]);
  }
  return [
    'attributes' => $attributes,
    'content' => $markup,
  ];
}

/**
 * Implements hook_preprocess_HOOK().
 */
function bos_remote_search_box_preprocess_form__remote_search_box(&$variables) {
  // Remove name attribute if empty, for W3C compliance.
  if (isset($variables['attributes']['name']) && empty((string) $variables['attributes']['name'])) {
    unset($variables['attributes']['name']);
  }
}

/**
 * Implements hook_preprocess().
 */
function bos_remote_search_box_preprocess(&$variables, $hook) {
  // Find instances where the original hook was a results container.
  if ($hook == "container" && isset($variables["element"]["#array_parents"])
    && in_array('search_criteria_wrapper', $variables["element"]["#array_parents"])) {

    if (in_array('results', $variables["element"]["#array_parents"])) {
      // Map the output into the content field.
      if (isset($variables["element"]["output"])) {
        $variables["content"] = $variables["element"]["output"];
      }

      // Convert and map the returned dataset into the dataset field.
      if (!empty($variables["element"]["#dataset"])) {
        $variables['dataset'] = (array) json_decode($variables["element"]["#dataset"]);
        unset($variables["element"]["#dataset"]);
      }
    }

    if (in_array('errors', $variables["element"]["#array_parents"])) {
      // Map the output into the content field.
      if (isset($variables["element"])) {
        $variables["content"] = $variables["element"];
      }
    }

  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function bos_remote_search_box_preprocess_form_element(&$variables) {
  if ($variables["type"] == "checkbox"
    && isset($variables["element"]["#array_parents"])
    && in_array('search_criteria_wrapper', $variables["element"]["#array_parents"])) {
    $variables["label_display"] = FALSE;
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function bos_remote_search_box_preprocess_form_element_label(&$variables) {
  $variables["attributes"]["class"] = "txt txt-l";
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function bos_remote_search_box_theme_suggestions_input_alter(array &$suggestions, array $variables, $hook) {
  if (isset($variables["element"]["#parents"])
      && in_array("search_criteria_wrapper", $variables["element"]["#parents"])
      && $variables["theme_hook_original"] == "input__checkbox") {
    $suggestions[] = "input__remote_search_box__checkbox";
  }
}

/**
 * Implements hook_theme_suggestions_alter().
 */
function bos_remote_search_box_theme_suggestions_alter(array &$suggestions, array $variables, $hook) {
  // Create generic and specific suggestions for each form element having an
  // attribute of "bundle".
  if (isset($variables['element'])) {
    $element = $variables['element'];
    if (isset($element['#attributes']['bundle'])) {
      $formid = $element['#attributes']['bundle'];
      if (isset($element["#parents"])
        && in_array("search_criteria_wrapper", $element["#parents"])) {
        if (in_array($hook, ["input", "checkboxes", "select"])) {
          $last = $element["#type"];
        }
        else {
          $last = array_reverse($element["#parents"])[0];
        }
        // order of suggestions is important.
        $suggestions[] = strtolower($variables['theme_hook_original'] . "__rsb__" . $last);
        $suggestions[] = strtolower($variables['theme_hook_original'] . "__" . $formid . "__" . $last);
      }
      elseif (in_array($hook, ["form"])) {
        // order of suggestions is important.
        $suggestions[] = strtolower($variables['theme_hook_original'] . "__rsb__" . $hook);
        $suggestions[] = strtolower($variables['theme_hook_original'] . "__" . $formid . "__" . $hook);
      }
    }
  }
  elseif ($hook == "paragraph") {
    $paragraph = $variables["elements"]["#paragraph"];
    if ($paragraph->hasField("field_remote_search_control")) {
      $formid = $paragraph->get("field_remote_search_control")->value;
      // order of suggestions is important.
      $suggestions[] = strtolower($variables['theme_hook_original'] . "__rsb__" . $hook);
      $suggestions[] = strtolower($variables['theme_hook_original'] . "__" . $formid . "__" . $hook);
    }
  }
}
