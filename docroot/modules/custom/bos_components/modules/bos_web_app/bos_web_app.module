<?php

/**
 * @file
 * The Base module file for bos_mnl module.
 */

use Drupal\Component\Utility\Html;
use Drupal\Core\Render\Markup;

/**
 * Implements hook_theme().
 */
function bos_web_app_theme() {
  $theme['paragraph__web_app'] = [
    'base hook' => 'paragraph',
    'path' =>\Drupal::service('extension.path.resolver')->getPath('module', 'bos_web_app') . '/templates',
  ];
  return $theme;
}

/**
 * Assigns library file.
 */
function bos_web_app_preprocess_paragraph__web_app(array &$vars) {
  if (!empty($vars['paragraph'])) {

    // Include a library for the bos_web_app module itself.
    $vars['#attached']['library'][] = 'bos_web_app/bos_web_app';

    // Legacy, include a library ref for the app name which is defined in the
    // bos_web_app module.
    // NOTE: Library inclusion should be handled in the apps own module.
    $paragraph = $vars['paragraph'];
    if ($paragraph->hasField('field_app_name')) {
      $libraryDiscovery = \Drupal::service('library.discovery');
      $libraries = $libraryDiscovery->getLibrariesByExtension("bos_web_app");
      $app_name = strtolower($paragraph->get('field_app_name')->value);
      $app_name = str_replace(' ', '_', $app_name);
      if (isset($libraries[$app_name])) {
        $vars['#attached']['library'][] = 'bos_web_app/' . $app_name;
      }
    }
    $vars['module_path'] = \Drupal::service('module_handler')->getModule('bos_web_app')->getPath();

  }
}

/**
 * Implements hook_paragraph_hook_summary_alter().
 */
function bos_web_app_paragraph_web_app_summary_alter(array $form_widget, array $para, array $attributes) {
  // Add attributes to the summary area.
  // Set the summary content.
  return [
    'attributes' => $attributes,
    'content' => [Markup::create($para["entity"]->get("field_app_name")->value)],
  ];
}
