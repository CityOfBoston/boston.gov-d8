<?php

/**
 * @file
 * The Base module file for bos_card module.
 */

use Drupal\bos_core\BackgroundResponsiveImage;
use Drupal\Component\Utility\Html;
use Drupal\paragraphs\Entity\Paragraph;

/**
 * Implements hook_theme().
 */
function bos_card_theme() {
  $theme['paragraph__grid_of_cards'] = [
    'base hook' => 'paragraph',
    'path' => 'modules/custom/bos_components/modules/bos_card/templates',
  ];
  $theme['paragraph__card'] = [
    'base hook' => 'paragraph',
    'path' => 'modules/custom/bos_components/modules/bos_card/templates',
  ];
  return $theme;
}

/**
 * Implements hook_preprocess_paragraph().
 */
function bos_card_preprocess_paragraph__grid_of_cards(&$variables) {
  if (!empty($variables['paragraph'])) {
    $paragraph = $variables['paragraph'];
    $theme = $paragraph->get('field_component_theme')->getValue();
    $variables['attributes']['class'][] = !empty($theme['0']['value']) ? 'b--' . $theme['0']['value'] : 'b--g';
    $variables['section_header_theme'] = $theme['0']['value'] === 'b' ? 'sh--w' : '';
  }
}

/**
 * Implements hook_preprocess_paragraph().
 */
function bos_card_preprocess_paragraph__card(&$variables) {
  if (!empty($variables['paragraph'])) {
    $paragraph = $variables['paragraph'];
    $thumb = $paragraph->get('field_thumbnail')->getValue();
    if (!empty($thumb['0']['target_id'])) {
      $variables['background_image'] = _bos_core_get_file_link($thumb['0']['target_id']);
    }
    $link = $paragraph->get('field_link')->getValue();
    if (!empty($link['0']['target_id'])) {
      if ($paragraph = Paragraph::load($link['0']['target_id'])) {
        $link = _bos_core_paragraph_extract_link($paragraph);
        if (isset($link['url'])) {
          $variables['card_url'] = $link['url'];
        }
        if ($paragraph->bundle() == 'lightbox_link') {
          $variables['attributes']['data-lity'] = '';
          $variables['#attached']['library'][] = 'bos_lightbox/lity';
        }
      }
    }

    // Handle thumbnail if present.
    if (isset($variables['content']['field_thumbnail'])) {
      $background_image = $variables["elements"]["field_thumbnail"];
      $photo_id = Html::getUniqueId('cd-ic-' . $variables["elements"]['#paragraph']->id());
      $variables['photo_id'] = $photo_id;

      if (isset($background_image["#items"]) && $background_image["#items"]->count()) {
        $css = BackgroundResponsiveImage::createBackgroundCss($background_image, ".$photo_id");
        $variables['#attached']['html_head'][] = [
          [
            "#tag" => "style",
            "#value" => $css,
            "#weight" => 100,
          ],
          "pip-intro-image-css-" . $photo_id,
        ];
      }

      $variables["new_image_class"] = "cd-ic " . $photo_id;
    }
  }
}
