<?php

/**
 * @file
 * Provides a guide entity type.
 */

use Drupal\bos_core\BackgroundResponsiveImage;
use Drupal\Core\Render\Element;
use Drupal\Component\Utility\Html;

/**
 * Implements hook_theme().
 */
function node_topic_page_theme() {
  return [
    'guide' => [
      'render element' => 'elements',
    ],
    'node__topic_page' => [
      'base hook' => 'node',
    ],
    'node__topic_page__listing_long' => [
      'base hook' => 'node',
      'path' => 'modules/custom/bos_components/modules/bos_list/templates',
    ],
  ];
}

/**
 * Implements hook_preprocess_HOOK().
 */
function node_topic_page_preprocess_node__topic_page(&$variables) {
  _bos_theme_fix_attributes($variables);
  $node = $variables['elements']['#node'];

  $variables['attributes']->addClass('node-' . $node->id());

  // Now make and render the Intro_image block.
  $variables['header_image'] = FALSE;
  if (isset($variables['content']['field_intro_image']) && $node->get('field_intro_image')->count()) {
    $variables['header_image'] = TRUE;
    _bos_content_fix_attributes($variables);
    $nestedElement = [
      ["div" => "hero-image b b--fw b--fw--480"],
      ["div" => "hero-image-wrapper " . $variables['photo_id'] . " hro hro--pt hro--pb"],
    ];
    $variables["content"]["intro_image"] = BackgroundResponsiveImage::createBackgroundFramework($nestedElement);
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function node_topic_page_node__topic_page__listing(&$variables) {
  if (!empty($variables['elements']['#node'])) {
    $node = $variables['elements']['#node'];
    $variables['title_raw'] = $node->getTitle();
    if (!$node->get('field_intro_image')->isEmpty()) {
      $variables['new_image_class'] = "cd-ic " . $variables['photo_id'];
    }
    else {
      // Sets a hatched blue background in place of image.
      $variables['new_image_class'] = "cd-ic hro--d";
    }
  }
}

/**
 * Prepares variables for guide templates.
 *
 * Default template: guide.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - elements: An associative array containing the guide information and any
 *     fields attached to the entity.
 *   - attributes: HTML attributes for the containing element.
 */
function template_preprocess_node__topic_page(array &$variables) {
  foreach (Element::children($variables['elements']) as $key) {
    $variables['content'][$key] = $variables['elements'][$key];
  }
  // Handle intro_image if present.
  // Has to happen in this template_preprocess_hook or does not #attach(ed).
  if (isset($variables['content']['field_intro_image'])) {
    $background_image = $variables["elements"]["field_intro_image"];
    switch ($variables["elements"]["#view_mode"]) {
      case "listing":
        break;

      default:
        if ($background_image["#items"]->count()) {
          $photo_id = Html::getUniqueId('hro');
          $paragraph = $variables['paragraph'];
          if (isset($paragraph) && $paragraph->hasField('_photo_id')) {
            $paragraph->set('_photo_id', $photo_id);
            $paragraph->save();
          }
          $variables['photo_id'] = $photo_id;
          $css = BackgroundResponsiveImage::createBackgroundCss($background_image, ".$photo_id");
          $variables['#attached']['html_head'][] = [
            [
              "#tag" => "style",
              "#value" => $css,
              "#weight" => 100,
            ],
            'topic-page-intro-image-css',
          ];
        }
    }
  }
}
