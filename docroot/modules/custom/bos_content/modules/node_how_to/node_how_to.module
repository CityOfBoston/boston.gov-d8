<?php

/**
 * @file
 * The Base module file for node_how_to module.
 */

use Drupal\image\Entity\ImageStyle;

/**
 * Implements hook_theme().
 */
function node_how_to_theme() {
  $theme['node__how_to'] = [
    'base hook' => 'node',
    'path' => 'modules/custom/bos_content/modules/node_how_to/templates',
  ];
  $theme['node__department_profile__article'] = [
    'base hook' => 'node',
    'path' => 'modules/custom/bos_content/modules/node_how_to/templates',
  ];
  $theme['field__field_how_to_tabs'] = [
    'base hook' => 'field',
    'path' => 'modules/custom/bos_content/modules/node_how_to/templates',
  ];
  $theme['field__field_contact__how_to__mode__full'] = [
    'base hook' => 'field',
    'path' => 'modules/custom/bos_content/modules/node_how_to/templates',
  ];
  $theme['field__field_intro_image__how_to'] = [
    'base hook' => 'field',
    'path' => 'modules/custom/bos_content/modules/node_how_to/templates',
  ];
  $theme['field__field_need_to_know'] = [
    'base hook' => 'field',
    'path' => 'modules/custom/bos_content/modules/node_how_to/templates',
  ];
  $theme['field__field_links__how_to__mode__full'] = [
    'base hook' => 'field',
    'path' => 'modules/custom/bos_content/modules/node_how_to/templates',
  ];
  $theme['field__field_payment_info'] = [
    'base hook' => 'field',
    'path' => 'modules/custom/bos_content/modules/node_how_to/templates',
  ];
  $theme['paragraph__how_to_contact_step'] = [
    'base hook' => 'paragraph',
    'path' => 'modules/custom/bos_content/modules/node_how_to/templates',
  ];
  $theme['paragraph__how_to_tab'] = [
    'base hook' => 'paragraph',
    'path' => 'modules/custom/bos_content/modules/node_how_to/templates',
  ];
  $theme['paragraph__how_to_text_step'] = [
    'base hook' => 'paragraph',
    'path' => 'modules/custom/bos_content/modules/node_how_to/templates',
  ];
  return $theme;
}

/**
 * Implements hook_preprocess_HOOK().
 */
function node_how_to_preprocess_node(&$variables) {
  if ($node = $variables['node']) {
    $type = $node->getType();
    if ($type == 'how_to') {
      $field_how_to_tabs = $node->get('field_how_to_tabs');
      $tab_paragraphs = $field_how_to_tabs->referencedEntities();
      $tabs = [];
      foreach ($tab_paragraphs as $tab_paragraph) {
        $tabs[] = $tab_paragraph->field_how_to_title->value;
      }
      $variables['tabs'] = $tabs;
    }
  }

  // Add intro_image as background to the title panel.
  if (isset($variables["node"]->field_intro_image)) {
    $background_image = $variables["node"]->field_intro_image;
    if (isset($background_image->entity)) {
      $uri = $background_image->entity->getFileUri();
      $variables['background_image_exists'] = TRUE;
      $variables['background_image'] = $background_image;
      $variables['xlarge_image'] = ImageStyle::load('rep_wide_2000x700custom_boston_desktop_2x')
        ->buildUrl($uri);
      $variables['large_image'] = ImageStyle::load('rep_wide_2000x700custom_boston_desktop_1x')
        ->buildUrl($uri);
      $variables['medium_image'] = ImageStyle::load('rep_wide_2000x700custom_boston_tablet_2x')
        ->buildUrl($uri);
      $variables['small_image'] = ImageStyle::load('rep_wide_2000x700custom_boston_mobile_2x')
        ->buildUrl($uri);
    }
  }

  // Add markup to locate the contextual editor button.
  _bos_theme_fix_attributes($variables);
  $variables["attributes"]->addClass("desktop-100");
  $variables["attributes"]->addClass("contextual-region");
  $variables["attributes"]->addClass("tab-pc");
  $variables["attributes"]->addClass("p-t500");
  $variables["attributes"]->addClass("node-" . $variables["node"]->id);
  $variables["attributes"]->addClass("clearfix");
}

/**
 * Implements hook_preprocess_HOOK().
 */
function node_how_to_preprocess_page(&$variables) {
  // We dont ever want a hero section from the page template.
  $variables['header_image'] = TRUE;
  _bos_theme_fix_attributes($variables);
  $variables['attributes']->addClass("mn");
}

/**
 * Implements hook_preprocess_HOOK().
 */
function node_how_to_preprocess_paragraph(&$variables) {

  $paragraph = $variables['elements']['#paragraph'];
  $paragraph_type = $paragraph->getType();
  static $tabs_counter = -1;
  if ($paragraph_type == 'how_to_tab') {
    $variables['how_to_tabs_count'] = ++$tabs_counter;
  }
  elseif ($paragraph_type == 'how_to_text_step' || $paragraph_type == 'how_to_contact_step') {
    static $steps_counter;
    static $previous_tab_count;
    if ($previous_tab_count < $tabs_counter) {
      $steps_counter = 0;
      $previous_tab_count = $tabs_counter;
    }
    $variables['how_to_step_count'] = ++$steps_counter;
  }

}
