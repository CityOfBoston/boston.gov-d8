<?php

/**
 * @file
 * Provides a program initiative profile entity type.
 */

use Drupal\bos_core\BackgroundResponsiveImage;
use Drupal\Core\Render\Element;

/**
 * Implements hook_theme().
 */
function node_program_initiative_profile_theme() {
  return [
    'node__program_initiative_profile' => [
      'render element' => 'elements',
    ],
  ];
}

/**
 * Implements hook_preprocess_HOOK().
 */
function node_program_initiative_profile_preprocess_page(&$variables) {
  if (!isset($variables["node"]) || (isset($variables["node"]) && is_object($variables['node']) && $variables["node"]->bundle() != "program_initiative_profile")) {
    return;
  }

  // Now make and render the Intro_image block.
  $variables['header_image'] = FALSE;
  if ($variables["node"]->hasField('field_intro_image') && $variables["node"]->get('field_intro_image')->count()) {
    $variables['header_image'] = TRUE;
    _bos_content_fix_attributes($variables);
    $variables["attributes"]->addClass("mn");
    $variables["attributes"]->setAttribute("id", "page");
    $nestedElement = [
      ["div" => "b b--fw b--fw--480"],
      ["div" => "hro hro--pt hro--pb"],
    ];
    $variables["content"]["intro_image"] = BackgroundResponsiveImage::createBackgroundFramework($nestedElement);
  }

}

/**
 * Implements hook_preprocess_HOOK().
 */
function node_program_initiative_profile_preprocess_node__program_initiative_profile(&$variables) {
  _bos_theme_fix_attributes($variables);
  $variables['attributes']->addClass('relative-free-article');
  $variables['attributes']->addClass('clearfix');
  $variables['attributes']->setAttribute('id', 'node-' . $variables['elements']['#node']->id());
}

/**
 * Prepares variables for program initiative profile templates.
 *
 * Default template: program-initiative-profile.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - elements: An associative array containing the program initiative profile
 *     information and any
 *     fields attached to the entity.
 *   - attributes: HTML attributes for the containing element.
 */
function template_preprocess_node__program_initiative_profile(array &$variables) {
  foreach (Element::children($variables['elements']) as $key) {
    $variables['content'][$key] = $variables['elements'][$key];
  }
  // Handle intro_image if present.
  // Has to happen in this template_preprocess_hook or does not #attach(ed).
  if ($variables['elements']["#node"]->hasField('field_intro_image')) {
    $background_image = $variables['elements']["#node"]->get('field_intro_image');
    if ($background_image->count()) {
      $css = BackgroundResponsiveImage::createBackgroundCss($background_image, "hero", "intro_image_fields", ".hro");
      $variables['#attached']['html_head'][] = [
        [
          "#tag" => "style",
          "#value" => $css,
          "#weight" => 100,
        ],
        'pip-intro-image-css',
      ];
    }
  }
}
