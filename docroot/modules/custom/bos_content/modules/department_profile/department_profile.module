<?php

/**
 * @file
 * Provides a department profile entity type.
 */

use Drupal\Core\Render\Element;
use Drupal\Core\StringTranslation\TranslatableMarkup;

/**
 * Implements hook_theme().
 */
function department_profile_theme($existing, $type, $theme, $path) {
  return [
    'node__department_profile' => [
      'base hook' => 'node',
      'path' => 'modules/custom/bos_content/modules/department_profile/templates',
      'template' => 'node--department-profile',
    ],
    'node__department_profile_contact' => [
      'base hook' => 'node',
      'path' => 'modules/custom/bos_content/modules/department_profile/templates',
      'template' => 'node--department-profile-contact',
    ],
    'field__field_intro_text' => [
      'base hook' => 'field',
      'path' => 'modules/custom/bos_content/modules/department_profile/templates',
      'template' => 'field--field-intro-text',
    ],
  ];
}

/**
 * Prepares variables for department-profile template.
 *
 * Default template: node--department-profile.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - elements: An associative array containing the test component page
 *     information and any fields attached to the entity.
 *   - attributes: HTML attributes for the containing element.
 */
function template_preprocess_node__department_profile(array &$variables) {
  foreach (Element::children($variables['elements']) as $key) {
    $variables['content'][$key] = $variables['elements'][$key];
  }
  // Replace underscores with dashes to maintain compatability with css library.
  foreach ($variables['attributes']['class'] as &$class) {
    $class = str_ireplace('_', '-', $class);
  }
  $variables["sub_nav"] = _bos_theme_findsvg('subnav-toggle.svg');
}

/**
 * Implements hook_preprocess_HOOK().
 */
function department_profile_preprocess_node(&$variables) {
  if (!isset($variables["node"]) || $variables["node"]->bundle() != 'department_profile') {
    return;
  }
  // Add javascript to enable component_navigation in-page menu (and scroll).
  $variables['#attached']['library'][] = "bos_theme/page.component_navigation";
}

/**
 * Implements hook_preprocess_HOOK().
 */
function department_profile_preprocess_breadcrumb(&$variables) {
  $crumbs = explode("/", trim(\Drupal::request()->getPathInfo(), "\/"));
  if (count($variables['breadcrumb'] == 1)) {
    $route = $variables['breadcrumb'][0]['url'];

    $a = array_keys($crumbs);
    $last_key = end($a);
    foreach ($crumbs as $key => $crumb) {
      if ($key == $last_key) {
        break;
      }

      $text = new TranslatableMarkup($crumb);
      $new_crumb = [
        'text' => $text,
        'url' => "",
      ];
      if (\Drupal::pathValidator()->isValid($route . $crumb)) {
        $new_crumb['url'] = $route . $crumb;
      }
      $variables['breadcrumb'][] = $new_crumb;
      $route .= $crumb . "/";
    }
  }

}

/**
 * Implements hook_preprocess_HOOK().
 */
function department_profile_preprocess_field(&$variables) {
  if (!isset($variables["element"]["#bundle"]) || $variables["element"]["#bundle"] != "department_profile") {
    return;
  }

  // Addresses twig issue in field--field-intro-text.html.twig where the
  // twig parser cannot process an attribute where attribute->storage is
  // empty.
  if ($variables['field_name'] == "field_intro_text" && count($variables["items"][0]["attributes"]->storage()) == 0) {
    unset($variables["items"][0]['attributes']);
  }
}
