<?php

/**
 * @file
 * Main file for the sidebar.module module.
 */

/**
 * Implements hook_theme().
 */
function vocab_contact_theme($existing, $type, $theme, $path) {
  return [
    'taxonomy_term__contact' => [
      'base hook' => 'taxonomy_term',
      'path' => 'modules/custom/bos_vocab/modules/vocab_contact/templates',
      'template' => 'taxonomy-term--contact',
    ],
    'field__field_address' => [
      'base hook' => 'field',
      'path' => 'modules/custom/bos_vocab/modules/vocab_contact/templates',
      'template' => 'field--field-address',
    ],
    'field__field_email' => [
      'base hook' => 'field',
      'path' => 'modules/custom/bos_vocab/modules/vocab_contact/templates',
      'template' => 'field--field-email',
    ],
    'field__field_phone_number' => [
      'base hook' => 'field',
      'path' => 'modules/custom/bos_vocab/modules/vocab_contact/templates',
      'template' => 'field--field-phone-number',
    ],
  ];
}

/**
 * Implements hook_contact_token_info().
 */
function vocab_contact_token_info() {
  $info = array();
  // Define our new token.
  $info['tokens']['boston']['contact-path'] = array(
    'name' => t('Contact Path'),
    'description' => t('A token to replace the contact path for person profile.'),
  );
  return $info;
}

/**
 * Implements hook_tokens().
 */
function vocab_contact_tokens($type, $tokens, array $data = array(), array $options = array()) {
  $replacements = array();

  if ($type == 'boston') {
    // Loop through the available tokens.
    foreach ($tokens as $name => $original) {
      // Find our custom tokens by name.
      switch ($name) {
        case 'contact-path':
          $dept_prefix = "";
          $term_name = "";
          // Work out the value of our token.
          if (!empty($data['node'])) {
            $this_node = $dept_node = $data['node'];
            $langcode = ($this_node->language()->getId() ?: "und");
            // Find the contact and get the last part of it's alias.
            $contact_field = $this_node->getTranslation($langcode)->field_contact;
            if (!empty($contact_field)) {
              $tid = $contact_field[0]['target_id'];
              $term_path = \Drupal::service('path.alias_manager')->getAliasByPath('/taxonomy/term/' . $tid, $langcode);
              $path_array = explode('/', $term_path);
              $term_name = end($path_array);
              $term = Drupal::entityTypeManager()->getStorage("taxonomy")->load($tid);
              // If the field_department_profile is set then this is not a
              // department, so set $node to the department_profile node
              // so we can get the department_type.
              $term_dept_profile = $term->getTranslation($langcode)->field_department_profile;
              if ($term_dept_profile) {
                $dept_node = Drupal::entityTypeManager()->getStorage("node")->load($term_dept_profile[0]['target_id']);
              }
            }
            // Figure out which type of department we have
            // and get it's replacement.
            $dept_type = $dept_node->getTranslation("und")->field_department_type;
            if (!empty($dept_type)) {
              switch ($dept_type->value) {
                case 'cabinet':
                  $dept_prefix = 'government/cabinets/';
                  break;

                case 'department':
                default:
                  $dept_prefix = 'departments/';
                  break;

              }
            }
          }
          // Give our token it's final value!
          $replacements[$original] = $dept_prefix . $term_name;
          break;
      }
    }
  }

  return $replacements;
}
