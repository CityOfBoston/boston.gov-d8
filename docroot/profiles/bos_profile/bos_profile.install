<?php
/**
 * @file
 * Install file for Boston.gov.
 */

use Drupal\Core\Extension\ModuleInstaller;

/**
 * Implements hook_install().
 */
function bos_profile_install() {
  // Override certain modules which are installed by default.

  /*
   * Modules defined in  ../config/default/core.extension.yml are enabled during
   * the config_import process (triggered by drush si command).
   * The repo also contains a config:
   *     "/config/default/config_split.config_split.development.yml
   * which defines development
   * - if the $envvar != dev then the
   * This module is installed after the config_import process and therefore will
   * override the modules enabled/disabled by core.extension.yml.
   * Note: Since the config may be exported in dev or prod and find its way into
   *       the git repo, it is best to use a toggle here to ensure that we at
   *       least start with the modules appropriate to the environment.   */
  /* @see https://docs.acquia.com/acquia-cloud/develop/config-d8 */

  // Be sure an environment indicator is set.
  // Note: on Acquia servers this will be one of prod / test / dev as per
  /*  @see https://docs.acquia.com/acquia-cloud/develop/env-variable/ */
  global $envvar;

  if (empty($_ENV['AH_SITE_ENVIRONMENT'])) {
    if (!empty(getenv('AH_SITE_ENVIRONMENT'))) {
      $envvar = getenv('AH_SITE_ENVIRONMENT');
    }
  }
  else {
    $envvar = $_ENV['AH_SITE_ENVIRONMENT'];
  }
  if (empty($envvar)) {
    $envvar = 'dev';
  }

  // Disable modules which are enabled in core by default.
  $disabled_modules = array(
//    'config_translation',
//    'content_translation',
    'history',
    'search',
  );
  // Don't set defaults here - use the .info file instead.
  $enabled_modules = array();

  // Specify modules used in dev environments
  $dev_only_modules = array(
    'automated_cron',
    'devel',
    'masquerade',
    'twig_xdebug',
    'stage_file_proxy',
    'migrate',
    'migrate_tools',
    'migrate_plus',
    'migrate_drupal',
    'migrate_drupal_ui',
    'migrate_upgrade',
    'dblog',
    'syslog',
  );
  $dev_only_modules=[];

  // Specify modules used in prod-only environments
  $prod_only_modules = array(
    'autologout',
    'acquia_connector',
    'acquia_purge',
  );
  $prod_only_modules=[];

  $current = \Drupal::moduleHandler()->getModuleList();
  $current = array_keys($current);

  if ($envvar == 'prod' || $envvar == 'test') {
    // Enable the production modules in prod / test
    $enabled_modules = array_merge($prod_only_modules, $enabled_modules);
    // Make sure dev-only modules are disabled in prod / test.
    $disabled_modules = array_merge($dev_only_modules, $disabled_modules);
  }
  else {
    // Enable development modules in develop environments.
    $enabled_modules = array_merge($dev_only_modules, $enabled_modules);
    // Disable annoying modules in develop environments.
    $disabled_modules = array_merge($prod_only_modules, $disabled_modules);
  }

  \Drupal::logger('profile')->info("bos_profile install started. Using <b>@env</b>.<br/><h3>Currently Installed:</h3><pre>@current</pre><br>
      <h3>To be disabled</h3><pre>@disable</pre><br><h3>To be enabled</h3><pre>@enable</pre><br>", array(
    '@env' => $envvar,
    '@current' => print_r($current, true),
    '@disable' => print_r($disabled_modules, true),
    '@enable' => print_r($enabled_modules, true),
  ));

  // select only mods we need to process (speeds up Drupal::service command).
  $enabled_modules = array_diff($enabled_modules, $current);
  $disabled_modules = array_intersect($disabled_modules, $current);

  // Do the disabling.
//  ModuleInstaller::uninstall($disabled_modules, TRUE);
  \Drupal::service('module_installer')->uninstall($disabled_modules, TRUE);

  // Do the enabling.
//  ModuleInstaller::install($enabled_modules, FALSE);
  \Drupal::service('module_installer')->install($enabled_modules, FALSE);

  // Now set some variables based on environment.
  \Drupal::state()->set("system.performance.css.preprocess", !($envvar == "dev"));
  \Drupal::state()->set("system.performance.js.preprocess", !($envvar == "dev"));
  \Drupal::state()->set("config_split.config_split.development.status", ($envvar == "dev"));
  \Drupal::state()->set("config_split.config_split.production.status", !($envvar == "dev"));
//  \Drupal::configFactory('system.performance')->getEditable()->set('css', ['preprocess' => !($envvar == "dev")]);
//  \Drupal::configFactory('system.performance')->getEditable()->set('js', ['preprocess' => !($envvar == "dev")]);
//  \Drupal::configFactory('config_split.config_split.development')->getEditable()->set('status', ($envvar == "dev"));

}
