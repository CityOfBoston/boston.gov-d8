behat:
  # @see http://docs.behat.org/en/v2.5/guides/6.cli.html#gherkin-filters
#  config: ${repo.root}/tests/behat/local.yml
  # An array of paths with behat tests that should be executed.
  tags: ~@hub
  # This is used for ad-hoc creation of a server via `drush rs`.
  profile: local
  # This needs to match a site entry in docroot/sites/sites.php.
  server-url: http://127.0.0.1:8888
  # If true, `drush runserver` will be used for executing tests.
#  run-server: false
  # If true, PhantomJS GhostDriver will be launched with Behat.
#  launch-phantom: true

#multisite:
#  name: default

project:
  profile:
#    name: 'bos_profile'
    name: 'standard'
    contrib: false
  cloud_alias: "@boston"
  themes:
    - boston
    - boston_public
  # Set this to 'initialize' to start a fresh install.
  # Otherwise set it to sync to sync from the stg environment.
  build_db_from: sync
  # The acquia_subname value is the machine name of your subscription on Acquia
  # Cloud. E.g., if your dev env URL on Acquia Cloud is
  # http://psprojectdev.prod.acquia-sites.com/ then your acquia_subname is
  # "psproject". This value is used to correctly configure settings in
  # settings.php includes. This will also determine the the directory name
  # of the new repository.
  acquia_subname: 'spyglass'
  # Used for enforcing correct git commit msg syntax.
  prefix: 'SPY'
  human_name: 'Spyglass'
  # This is the default makefile that will be used to build dependencies.
  # It should live in the project root.
  make_file: 'make.yml'

# Configuration settings for new git repository.
git:
  remotes:
    # Defining git remotes allows builds deployed via CI.
    - boston@svn-14671.prod.hosting.acquia.com:boston.git
    - thehub@svn-14671.prod.hosting.acquia.com:thehub.git

docroot.relative: ${repo.root.relative}/docroot
docroot: ${repo.root}/docroot

composer:
  bin: ${repo.root}/vendor/bin

# Drupal Account Credentials. These are used for installing Drupal.
drupal:
  account:
    name: admin
    password: admin
    mail: no-reply@acquia.com
  multisite:
    name: default

drush:
  bin: ${composer.bin}/drush
  cmd: ${drush.bin} -r ${docroot} -l ${drupal.multisite.name}
  root: ${docroot}

# deploy:
  # includes-file: ${core.phing.dir}/../files/deploy-include-files.txt
deploy:
  dir: ${repo.root}/deploy
  includes-file: ${custom.phing.dir}/../files/deploy-includes.txt
  excludes-file: ${custom.phing.dir}/../files/deploy-excludes.txt

reports:
  localDir: ${repo.root}/reports
  remoteDir: reports

doit:
  cmd: ${repo.root}/scripts/doit/doit

# Configuration for the Ansible Drupal VM. To prevent inclusion of a vm, remove
# the "vm" key.
vm:
  # If true, this provisions and launches the virtual machine as part of the
  # installation process. Note that dependencies (vagrant, ansible, virtual box)
  # must be installed for this work.
  # @see /box
  bootstrap: false
  # This loads the necessary ansible requirements.
  rebuild_requirements: true
  drush_version: 6.6.0
  drupal_major_version: 7

# The testing framework is limited to the `tests` directory, and includes
# example tests and configuration for Behat, PHPUnit, and JMeter. To prevent
# this from being copied, remove the 'testing_framework' key.
testing_framework:
  behat:
    javascript_driver: 'selenium2'