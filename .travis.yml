sudo: false
language: php

env:
  - TASK="vendor/bin/phing -f build.xml validate:all"
  - TASK="vendor/bin/phing -f build.xml tests:all"
#  - TASK="vendor/bin/phing -f build.xml -Dbehat.run-server=true -Dproject.build_db_from=initialize build:local tests:all"

branches:
  only:
    - develop
    - master
    - settings
    - acquia-deployment

php:
  - 7.1

addons:
  apt:
    update: true
    packages:
      - libssl1.0.0
  ssh_known_hosts:
    - svn-29892.prod.hosting.acquia.com
    - bostond8dev.ssh.prod.acquia-sites.com

cache:
  bundler: true
  apt: true
  directories:
    - "$HOME/.composer/cache"
    - "$HOME/.drush/cache"
    - "$HOME/.nvm"
    - vendor
    - node_modules

notifications:
  slack:
    secure: b2UX5FnE2/C5MDNK47EP0GZIRmfwX+18HES0Q/uSwt6t7+ogKCtIjWCp1sIPd7jqRak0VmLoM0OHy6MBjz6x+1MQMNUqPEiO1f2APgBJ48c6rzeWQKTVfrKsUvPYIA+gxQ7jq7Gn0zPYQ5/+KXkxac+NrVoH85sI0xIL2BhFgQu1W4OlLLFKT11U7zJtCi3bcYhF7/eyCcrs3+IBGGp9sldjWvaVLDqUnFjz3c5AXwxlbJ6UTq7GIdIEe5Xw/UOJS9weedhoYH2XSNzFpmqqkAGcvkFpgCeYxf12iiqkmoAq5A0CxWVXqA3vG+imabuQonpbQsGdvtFP71EV9o9DxwATwxaGhBpX+Sw4zN7v25IC6n7rcvcK2F9dtY0CAb8BpWbEbWMDXXmVvFEVAvgARQ/b+L7YOJbNbbJwJQqZkllJp0lAFluyMDwpP2Ncr177S5hR/4Z6rlj1aLK1nhbmi/tK/kSNe+bcashm7/S2KG076hN0b5TB87hsbkvHsnVJDMKXSHwKrrdJiXDAkwZbl2sBp/bbfMTXyEqrINUG4WA70WXP3lR/QJy2pldVEYIU5rRwSzZ0BJ9raF7iiXFgTn3+Yhl0U/UgcDCEKoRvutM/suCy1mQBYP+Gv1uyFNFco37doQbPeyAXNb1vjfJQtyzy8I31gIN/sK590YxLBCA=

before_install:
  # Add in some required packages (ref: <reporoot>/.lando.yml
  - sudo apt-get update
  - sudo apt-get install -y --no-install-recommends libgd-dev openssh-client jq fontconfig openssl

install:
  # In this context "install" is the phing build process because we are installing Drupal in order to test it.
  # Step 1: Download all dependencies.
    # ensure composer is on latest version.
  - composer selfupdate
  - export AH_SITE_ENVIRONMENT=dev
  - export LANDO_INFO='{"appserver":{"type":"php","version":"7.1","hostnames":["appserver"],"via":"apache","webroot":"docroot","config":{"conf":"xdebug.ini"}},"database":{"type":"mysql","version":"5.7","hostnames":["database"],"creds":{"user":"root","password":"","database":"drupal"},"internal_connection":{"host":"localhost","port":3306},"external_connection":{"host":"localhost","port":3306},"config":{"confd":"/home/david/.lando/services/config/drupal8/mysql"}},"node":{"type":"node","version":"8.9","hostnames":["node"]}}'
  # Step 2: Build the drupal site using Phing.
    # Make an account for drupal in MySQL (better than using root a/c).
  - mysql -u root -e "GRANT ALL PRIVILEGES ON *.* TO 'drupal'@'localhost' IDENTIFIED BY 'drupal';"
  - travis_wait 15 $TRAVIS_BUILD_DIR/vendor/bin/phing -f $TRAVIS_BUILD_DIR/build.xml -Dgit.private_repo.user="https://${GITHUB_USER}:${GITHUB_TOKEN}@github.com/"  setup:docker:drupal-travis
  - export phing="$TRAVIS_BUILD_DIR/vendor/bin/phing -f $TRAVIS_BUILD_DIR/build.xml"
  # Step 3: Manage SSH keys for deployment to Acquia.
  - openssl aes-256-cbc -K $ACQUIA_KEY -iv $ACQUIA_VECTOR -in $TRAVIS_BUILD_DIR/scripts/deploy/acquia.enc -out $TRAVIS_BUILD_DIR/scripts/deploy/acquia_deploy -d
  - eval "$(ssh-agent -s)"
  - chmod 600 $TRAVIS_BUILD_DIR/scripts/deploy/acquia_deploy
  - ssh-add $TRAVIS_BUILD_DIR/scripts/deploy/acquia_deploy

script:
  # Run basic validation and Behat/PHPUnit tests in parallel.
  - "$TASK"

after_success:
  - scripts/deploy/travis-deploy.sh develop develop-deploy
#  - scripts/deploy/travis-deploy.sh master master-build
#  - scripts/deploy/travis-deploy.sh acquia-deployment acquia-build
