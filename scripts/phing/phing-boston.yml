behat:
  # @see http://docs.behat.org/en/v2.5/guides/6.cli.html#gherkin-filters
  config: ${repo.root}/tests/behat/local.yml
  # An array of paths with behat tests that should be executed.
  tags: ~@hub
  # This is used for ad-hoc creation of a server via `drush rs`.
  profile: local
  # This needs to match a site entry in docroot/sites/sites.php.
  server-url: http://127.0.0.1:8888
  # If true, `drush runserver` will be used for executing tests.
#  run-server: false
  # If true, PhantomJS GhostDriver will be launched with Behat.
#  launch-phantom: true

project:
  profile:
    name: 'bos_profile'
    contrib: false
    install_profile: 'config_installer'
  cloud_alias: "@boston"
  themes:
    - bos_theme
  config:
    # define the folder, relative to the project root, for config files to be synchronised, no trailing slash.
    # aquia require ./config/default:
    #     @see https://docs.acquia.com/acquia-cloud/develop/config-d8/
    sync: "../config/default"

  # Set this to 'initialize' to start a fresh install.
  # Otherwise set it to sync to sync from the stg environment.
  build_db_from: sync
  # The acquia_subname value is the machine name of your subscription on Acquia
  # Cloud. E.g., if your dev env URL on Acquia Cloud is
  # http://psprojectdev.prod.acquia-sites.com/ then your acquia_subname is
  # "psproject". This value is used to correctly configure settings in
  # settings.php includes. This will also determine the the directory name
  # of the new repository.
  acquia_subname: 'spyglass'
  # Used for enforcing correct git commit msg syntax.
  prefix: 'SPY'
  human_name: 'Spyglass'
  # This is the default makefile that will be used to build dependencies.
  # It should live in the project root.
  make_file: 'make.yml'

  # These configurations map to AH_XXXX environment variables.
  # refer: https://docs.acquia.com/acquia-cloud/develop/env-variable/
  acquia:
    # Un-comment is this is a production site
    # production: 1
    # Un-comment is this is a non-production site
    non_production: 1
    # set one of dev, test or prod based on host
    site_environment: dev

php:
  xdebug:
    # Provide absolute path and filename on the drupal server for the xdebug.ini file.
    remote_file: '/usr/local/etc/php/conf.d/boston.xdebug.ini'
    # Provide the filename of the xdebug.ini
    default_file: 'xdebug.ini'


# Configuration settings for new git repository.
git:
  # [Optional] Set this node (private_repo) if there is a private repo that needs to
  # be included as part of the build:
  # - It is expected that the repo is hosted on GitHub.
  # - The development machine *must* have a valid ssh key for this remote repo.
  # - The repo can contain a settings file (e.g. private.settings.php)
  # - The folder structure of the private repo must exactly match the folder structure
  #   of the main repo so that files can be copied across to the correct folders.
  private_repo:
    repo: git@github.com:CityOfBoston/boston.gov-d8-private.git
    branch: du-friday
    # Where the repo will be cloned to.
    local_dir: ${repo.root}/setup/private
    # [optional] Provide the path to a settings script (relative to the private repo root),
    # which will be copied to the main repo and then set up to be called from (i.e. extend)
    # the sites main settings.php script.
    settings_file: sites/${drupal.multisite.name}/settings/private.settings.php

  # Defining git remotes allows builds deployed via CI.
  remotes:
    - boston@svn-14671.prod.hosting.acquia.com:boston.git
    - thehub@svn-14671.prod.hosting.acquia.com:thehub.git

docroot.relative: ${repo.root.relative}/docroot
docroot: ${repo.root}/docroot

composer:
  bin: ${repo.root}/vendor/bin

# Drupal Account Credentials. These are used for installing Drupal.
drupal:
  account:
    name: admin
    password: admin
    mail: no-reply@acquia.com
  multisite:
    # Use 'default' as the name if there are no multisites.
    name: default

drush:
  bin: ${composer.bin}/drush
  cmd: ${drush.bin} # -r ${docroot} # -l ${drupal.multisite.name}
  root: ${docroot}

# deploy:
  # includes-file: ${core.phing.dir}/../files/deploy-include-files.txt
deploy:
  dir: ${repo.root}/deploy
  includes-file: ${custom.phing.dir}/../files/deploy-includes.txt
  excludes-file: ${custom.phing.dir}/../files/deploy-excludes.txt

reports:
  localDir: ${repo.root}/reports
  remoteDir: reports

doit:
  cmd: ${repo.root}/scripts/doit/doit

# The testing framework is limited to the `tests` directory, and includes
# example tests and configuration for Behat, PHPUnit, and JMeter. To prevent
# this from being copied, remove the 'testing_framework' key.
testing_framework:
  behat:
    javascript_driver: 'selenium2'